mp4-convert() {
	ffmpeg -i "$1" -acodec libfaac -b:a 96k -vcodec libx264 -strict -2 -b:v 1M -s 1280x720 -pix_fmt yuv420p "mp4/$2"
}

# Start, stop and restart local server
function server() {

	case $1
		in
			start)
				mysql-start
				php-fpmd start
				nginxd start
				;;
			stop)
				mysql-stop
				php-fpmd stop
				nginxd stop
				;;
			restart)
				mysql-restart
				php-fpmd restart
				nginxd restart
				;;
			*)
				echo "Usage: server start|stop|restart"
	esac

}

# artisanclean
artisanclean() {

    if [ ! -f 'artisan' ]; then
        echo "You need to be in the same folder as artisan!"
        return
    fi

    if [ ! -d "public/uploads" ]; then
    	mkdir public/uploads
    fi

    sudo chown -R _www:staff bootstrap/cache storage public/uploads
    sudo chmod -R 775 bootstrap/cache storage public/uploads

    php artisan cache:clear
    php artisan clear-compiled
    php artisan optimize
    php artisan config:clear

}

# Open customer
kunder() {
	CUSTOMER="$1"
	CHARACTER=${CUSTOMER:0:1}
	open "/Users/$USER/Documents/Kunder/$CHARACTER/$CUSTOMER";
}

function web_search() {

	# define search engine URLS
	typeset -A urls
	urls=(
		google        "https://www.google.com/search?q="
		github        "https://github.com/search?q="
		stackoverflow "http://stackoverflow.com/search?tab=relevance&q="
		wordpress     "http://wordpress.org/search/"
		caniuse       "http://caniuse.com/#search="
		phpnet        "http://php.net/manual-lookup.php?pattern="
	)

	# Check whether the search engine is supported
	if [[ -z "$urls[$1]" ]]; then
		echo "Search engine $1 not supported."
		return 1
	fi

	# Search or go to main page depending on number of arguments passed
	if [[ $# -gt 1 ]]; then
		# build search url:
		# join arguments passed with '+', then append to search engine URL
		url="${urls[$1]}${(j:+:)@[2,-1]}"
	else
		# Build main page url:
		# Split by '/', then rejoin protocol (1) and domain (2) parts with '//'
		url="${(j://:)${(s:/:)urls[$1]}[1,2]}"
	fi

	open_command "$url"
}

service() {
	sudo brew services $*
}
