# Import base config from i3
include $HOME/.dotfiles/config/i3/variables.conf
include $HOME/.dotfiles/config/i3/settings.conf
include $HOME/.dotfiles/config/i3/keybinds.conf

# Start network manager applet
exec_always nm-applet --indicator

# GTK
set $gnome-schema org.gnome.desktop.interface
exec {
    gsettings set $gnome-schema gtk-theme 'Arc-Dark'
    gsettings set $gnome-schema.wm.preferences theme 'Arc-Dark'
    gsettings set $gnome-schema icon-theme 'Papirus-Dark'
}

# Wallpaper
output * bg $HOME/.dotfiles/assets/wallpapers/forest.png fill

# Idle configuration
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         before-sleep 'swaylock -f -c 000000'

# Lock when lid is closed
bindswitch --reload --locked lid:on exec swaylock -f -c 000000 && systemctl suspend

# Lock screen with hotkeys
bindsym $mainMod+$secondMod+l exec swaylock -f -c 000000

# Input configuration
input type:keyboard {
    xkb_layout nocustom
    # xkb_options altwin:swap_alt_win
    repeat_delay 500
    repeat_rate 40
}

input type:touchpad {
    dwt enabled
    tap enabled
    tap_button_map lrm
    natural_scroll enabled
    middle_emulation disabled
    click_method clickfinger
}

# 1Password
bindsym Ctrl+Shift+l exec 1password --lock
bindsym Shift+$secondMod+space exec 1password --quick-access

# Sway notifications
bindsym $mainMod+N exec swaync-client -t -sw
bindsym $mainMod+Shift+N exec swaync-client -C

# Toggle Waybar
bindsym $mainMod+d exec killall waybar || waybar

# Workspaces
set $next_or_new swaymsg -r -t get_workspaces | jq -r --arg OUTPUT $(swaymsg -t get_outputs -r | jq -r '.[] | select(.focused == true) | .name') '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | (max_by(.num) | .num) as $maxOutput | (.[] | select(.focused == true) | .num) as $current | if $maxOutput > $current then "next_on_output" else $max + 1 end'

# Switch to workspace
bindsym ctrl+$secondMod+$down workspace prev
bindsym ctrl+$secondMod+$up exec swaymsg "workspace $($next_or_new)"

# Move focused container to workspace
bindsym ctrl+$secondMod+$left move container to workspace prev_on_output, workspace prev_on_output
bindsym ctrl+$secondMod+$right exec swaymsg "move container to workspace $($next_or_new), workspace $($next_or_new)"

# Screenshots
bindsym CTRL+ALT+2 exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "${HOME}/Pictures/screenshots/$(date +'screenshot_%F-%T').png"
bindsym CTRL+ALT+Shift+2 exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy
bindsym CTRL+ALT+3 exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" "${HOME}/Pictures/screenshots/$(date +'screenshot_%F-%T').png"
bindsym CTRL+ALT+Shift+3 exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
bindsym CTRL+ALT+4 exec grim -g "$(slurp)" "${HOME}/Pictures/screenshots/$(date +'screenshot_%F-%T').png"
bindsym CTRL+ALT+Shift+4 exec grim -g "$(slurp -d)" - | wl-copy

# Monitor brightness
bindsym XF86MonBrightnessDown exec brightnessctl set -s 10%-
bindsym XF86MonBrightnessUp exec brightnessctl set -s 10%+

# Keyboard brightness
bindsym XF86KbdBrightnessUp exec brightnessctl --device='smc::kbd_backlight' set 10%+
bindsym XF86KbdBrightnessDown exec brightnessctl --device='smc::kbd_backlight' set 10%-

# Volume
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Media (requires playerctl)
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioNext exec playerctl next

# Status Bar:
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
